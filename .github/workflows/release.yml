name: Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-intel
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf android-debloater-${{ matrix.name }}.tar.gz android-debloater
        mv android-debloater-${{ matrix.name }}.tar.gz ../../../
    
    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a android-debloater-${{ matrix.name }}.zip android-debloater.exe
        move android-debloater-${{ matrix.name }}.zip ../../../
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-debloater-${{ matrix.name }}
        path: |
          *.tar.gz
          *.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare release files
      run: |
        mkdir release-files
        find artifacts -type f \( -name "*.tar.gz" -o -name "*.zip" \) -exec cp {} release-files/ \;
        ls -lh release-files/
    
    - name: Generate release tag
      id: tag
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "tag=build-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        files: release-files/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}